---
import { changeLanguage } from "i18next";
// @ts-ignore
import { localizePath } from "astro-i18next";
import Layout from "../../layouts/Layout.astro";
import Footer from "../../layouts/Footer.astro";
import Button from "../../components/Button.astro";
import SideBar from "../../components/SideBar.astro";
import ProjectDescription from "../../components/ProjectDescription.astro";
import Mockup from "../../images/mockup.png";
import { Image } from "astro:assets";
import iPhone from "../../images/blank-iphone-mockup.png";
import MobileView from "../../images/kingdra-mobile-view.png";

changeLanguage("de");

const sidebarItems = [
    { i18nKey: "caseStudy.overview", href: "#overview" },
    { i18nKey: "caseStudy.context", href: "#context" },
    { i18nKey: "caseStudy.roadblocks", href: "#roadblocks" },
    { i18nKey: "caseStudy.proposals", href: "#proposals" },
    { i18nKey: "caseStudy.interactions", href: "#interactions" },
    { i18nKey: "caseStudy.visualDesign", href: "#visualDesign" },
    { i18nKey: "caseStudy.finalDesigns", href: "#finalDesigns" },
    { i18nKey: "caseStudy.retrospective", href: "#retrospective" },
];
---

<Layout title="Kingdra Pokemon Teambuilder Case Study">
  <div class="m-8">
    <Button label={"Back"} href={localizePath("/")} />
  </div>
  <main class="mx-auto flex w-[1150px] max-w-[calc(100%-2rem)] flex-row">
    <SideBar navItems={sidebarItems} className="fixed right-12 top-56 -z-10" />
    <div class="mb-20">
      <h1 class="mt-4 text-center text-5xl font-bold text-white">
        Kingdra Pokemon Teambuilder
      </h1>

      <h2 class="mb-8 text-center text-[1rem] text-[#d0d0d0] md:mb-0">
        The Journey to Mobile - October 2024
      </h2>

      <Image src={Mockup} alt="Kingdra Teambuilder" />

      <div class="flex justify-center">
        <ProjectDescription
          projectRole={["Software Engineering", "Product Design"]}
          team={["Solo"]}
          tools={["Next.js", "TypeScript", "Tailwind", "Figma"]}
          timeline={["1 Month"]}
        />
      </div>

      <!-- Scaffolded Sections Start Here -->

      <section class="pb-10 pt-10 md:flex md:gap-20" id="overview">
        <h3 class="text-2xl font-semibold text-white">Overview</h3>
        <div>
          <p>
            Following the creation of my Pokemon Teambuilder in June, users
            testing the web app on their phone ran into a significantly higher
            rate of bugs and grievances compared to their peers on desktop
            platforms. Mobile was an afterthought during the initial development
            process.
          </p>
          <br />
          <p>
            I tasked myself with rebuilding the UI for mobile devices, reducing
            the cost of interaction and easing the cognitive load for users that
            want to use the application on the go.
          </p>
          <br />
          <p>
            These improvements reduced the overall scrolling time between UI
            elements and significantly reduced time to select Pokémon for a
            given team.
          </p>
        </div>
      </section>

      <section id="context" class="flex gap-8 max-lg:flex-col">
        <div class="lg:w-2/3">
          <h3 class="text-2xl font-semibold text-white">Context</h3>
          <p>
            In June of 2024, I started development for this Pokémon Teambuilder
            project as a way to learn <a
              class="text-link"
              href="https://nextjs.org/"
              target="_blank"
              rel="noreferrer">Next.js</a
            > and build my first real full-stack application. The project was a lot
            of trial and error, and I spent a ton of time linking up database schemas,
            calling APIs, and writing the core logic that allowed the Teambuilder
            to
            <a
              class="text-link"
              href="https://bulbapedia.bulbagarden.net/wiki/Stat#Determination_of_stats"
              target="_blank"
              rel="noreferrer">mimic the math</a
            > that the core Pokémon games use to calculate stats. After deploying
            the app, I enlisted the help of my Pokémon fan friends to test the app.
            One problem was clear immediately.
          </p>
          <br />

          <div class="row-card">
            <h2 class="text-white">
              The mobile experience was absolutely horrendous.
            </h2>
          </div>

          <p>
            They initially tested the app on their phones, because why wouldn't
            they? Mobile users make up <a
              class="text-link"
              href="https://explodingtopics.com/blog/mobile-internet-traffic#mobile-internet-top-stats"
              target="_blank"
              rel="noreferrer">over 60% of global internet traffic</a
            >. Many of them were running errands when I posted the question in
            the Discord, and thought they could check it out really quick on
            their break. They were in for a rude awakening. The interface forced
            them to scroll for entire seconds to find the Pokémon they were
            looking to find, and the infinite scrolling feature significantly
            favored desktop users, who could leverage the width of the screen to
            quickly scan for the Pokémon they wanted.
          </p>
          <br />
          <p>
            The message was loud and clear. The UI needed to be rebuilt with
            portable devices in mind.
          </p>
        </div>
        <div class="lg:sticky lg:top-8 lg:w-1/3">
          <!-- Added positioning and width -->
          <div class="mockup-container">
            <div class="mockup-content">
              <Image
                src={MobileView}
                alt={"Mobile View"}
                width={300}
                height={533}
              />
            </div>
            <Image
              src={iPhone}
              alt={"iPhone"}
              class="mockup-phone"
              width={300}
              height={533}
            />
          </div>
        </div>
      </section>

      <section id="roadblocks">
        <h3 class="text-2xl font-semibold text-white">Roadblocks</h3>
        <p class="pb-3">There were a few constraints...</p>
        <div class="card-container">
          <div class="card">
            <svg
              class="mx-auto my-2"
              xmlns="http://www.w3.org/2000/svg"
              width="7rem"
              height="8rem"
              viewBox="0 0 20 20"
              ><path
                fill="white"
                d="M3.5 2C2.67 2 2 2.67 2 3.498v12.981c0 .828.671 1.498 1.5 1.498h1c.827 0 1.499-.67 1.499-1.498V3.498C5.999 2.67 5.327 2 4.499 2zm4.998 0c-.828 0-1.5.67-1.5 1.498v12.981c0 .828.672 1.498 1.5 1.498h1c.828 0 1.499-.67 1.499-1.498V3.498c0-.827-.671-1.498-1.5-1.498zm7.22 4.157a1.5 1.5 0 0 0-1.87-1.106l-.745.21a1.5 1.5 0 0 0-1.06 1.742l2.003 9.799a1.5 1.5 0 0 0 1.839 1.151l.985-.25c.79-.2 1.274-.994 1.092-1.787z"
              ></path></svg
            >
            <h4 class="text-xl font-medium text-white">Component Libraries</h4>
            <p>
              I used the <code>Flowbite</code> component library to build the UI.
              This saved me a lot of time initially, but locked me into an inflexible
              ecosystem that hindered my ability to design the page responsively.
              The opportunity cost of switching off this UI library was too high.
              I would need to work within their framework for my redesign.
            </p>
          </div>
          <div class="card">
            <svg
              class="mx-auto my-2"
              xmlns="http://www.w3.org/2000/svg"
              width="8rem"
              height="8rem"
              viewBox="0 0 20 20"
              ><path
                fill="white"
                d="M6.25 3.5a3.25 3.25 0 0 0 0 6.5h7.5a1.75 1.75 0 1 1 0 3.5H4.56l.22-.22a.75.75 0 1 0-1.06-1.06l-1.5 1.5a.75.75 0 0 0 0 1.06l1.5 1.5a.75.75 0 1 0 1.06-1.06l-.22-.22h9.19a3.25 3.25 0 0 0 0-6.5h-7.5a1.75 1.75 0 1 1 0-3.5h10a.75.75 0 0 0 0-1.5z"
              ></path></svg
            >
            <h4 class="text-xl font-medium text-white">The S-Curve Design</h4>

            <p>
              I initially designed the UI with an S-Curve design to make the
              elements easy to track for users on desktops. This was a
              miscalculation on my part, as it meant that the interface would be
              significantly hindered on screens without significant horizontal
              real-estate.
            </p>
          </div>
          <div class="card">
            <svg
              class="mx-auto my-2"
              xmlns="http://www.w3.org/2000/svg"
              width="7rem"
              height="8rem"
              viewBox="0 0 24 24"
              ><path
                fill="white"
                d="m12 2l4 4h-3v7.85l6.53 3.76L21 15.03l1.5 5.47l-5.5 1.46l1.53-2.61L12 15.58l-6.53 3.77L7 21.96L1.5 20.5L3 15.03l1.47 2.58L11 13.85V6H8z"
              ></path></svg
            >
            <h4 class="text-xl font-medium text-white">
              Lack of Dimensionality
            </h4>
            <p>
              Native smartphone applications often stack elements on top of one
              another to function. Whether it be through modals or additional
              pages, mobile UIs work best when elements are stacked on one
              another. Unfortunately, the flat design and reliance on infinite
              scrolling made the app difficult to adapt to mobile simply by
              shifting elements around on the page.
            </p>
          </div>
          <!--
          <div class="card">
            <h4 class="text-xl font-medium text-white">
              Interactivity on Hover
            </h4>
            <p>
              Since this application was initially designed with desktop users
              in mind, it includes a lot of buttons that were only accessible
              to users with working mice.
            </p>
          </div>
          -->
        </div>
        <div class="row-card mt-4 items-center">
          <p>THE GOAL?</p>
          <h2 class="my-0 text-white">
            Take a dense UI, even by desktop standards, and make it feel at home
            on smaller devices.
          </h2>
        </div>
      </section>

      <section id="proposals">
        <h3 class="text-2xl font-semibold text-white">Navigation Proposals</h3>
        <p>
          There were a couple ways to do this, each with their own set of
          problems.
        </p>
        <div>
          <h2 class="text-white">IOS-like Tab Bar</h2>
          <p>Pros: Easily accessible for one-handed use</p>
          <p>
            Cons: Clunky, Can't see added Pokémon, Not enough UI
            elements/settings to fill 3+ pages
          </p>
        </div>
        <div>
          <h2 class="text-white">Material Design</h2>
          <p>Pros:</p>
          <p>Cons:</p>
        </div>
      </section>

      <section id="interactions">
        <h3 class="text-2xl font-semibold text-white">Interactivity Tweaks</h3>
        <div class="row-card-container">
          <div class="row-card">
            <h4 class="text-xl font-medium text-white">
              Reduce Reliance on Hover
            </h4>
            <p>
              Mobile users don't want signifiers of interactivity on hover. This
              is because hover states are not easily accessible on touch
              devices, and can lead to confusion and frustration for users.
              Therefore, it's important to design interactions that are clear
              and intuitive, without relying on hover states. In addition, it's
              crucial to consider the diversity of mobile devices and their
              capabilities. Some devices may not support hover states at all,
              while others may have limited support. Designing interactions that
              work across a wide range of devices and screen sizes is essential
              for a seamless user experience.
            </p>
          </div>
          <div class="row-card">
            <h4 class="text-xl font-medium text-white">Action Feedback</h4>
            <p>
              Mobile users often struggle to perceive the effects of their
              actions on a touchscreen device. This is because the tactile
              feedback and visual cues that are present on desktop devices, such
              as a mouse cursor changing shape or a button's state changing, are
              not as pronounced on mobile devices. To address this, it's
              essential to design interactions that provide clear and immediate
              feedback to the user, ensuring they understand the outcome of
              their actions. This can be achieved through visual cues like
              animations, color changes, or text updates that clearly indicate
              the result of a user's interaction. By doing so, mobile users can
              confidently navigate and interact with the application, even
              without the visual feedback provided by a mouse.
            </p>
          </div>
        </div>
      </section>

      <section id="visualDesign">
        <h3 class="text-2xl font-semibold text-white">Visual Adaptations</h3>
        <div class="card-container">
          <div class="card">
            <h4 class="text-xl font-medium text-white">Margins</h4>
            <p>
              Margins needed to be radically cut to fit as much information into
              the modals as possible. The original mobile adaptation had
              character-size margins on every container, making for a
              clausterphobic experience.
            </p>
            <p>X - Image 1</p>
            <p>Check - Image 2</p>
          </div>

          <div class="card">
            <h4 class="text-xl font-medium text-white">
              Convert Tabs to Dropdowns
            </h4>
            <p>The horizontal tabs that existed</p>
            <p>X - Image 1</p>
            <p>Check - Image 2</p>
          </div>

          <div class="card">
            <h4 class="text-xl font-medium text-white">PWA Migration</h4>
            <p>
              The Kingdra Teambuilder app's transition to a Progressive Web App
              (PWA) significantly enhanced the mobile user experience. PWAs
              provide a native app-like experience with seamless interaction,
              home screen installation, and offline capabilities. This allows
              users to manage their Pokémon teams without an internet
              connection, making the app more accessible and convenient. PWAs
              also offer faster load times, improved performance, and enhanced
              security features. The transition to a PWA has greatly improved
              the mobile user experience, offering a more immersive, accessible,
              and engaging interaction with the app.
            </p>
            <p>X - Image 1</p>
            <p>Check - Image 2</p>
          </div>
        </div>
      </section>

      <section id="finalDesigns">
        <h3 class="text-2xl font-semibold text-white">User Flow</h3>
        <p>So how does this all come together?</p>
        <br />
        <div class="row-card-container">
          <div class="row-card">
            <h2>Image</h2>
          </div>
        </div>
      </section>

      <section id="retrospective">
        <h3 class="text-2xl font-semibold text-white">Retrospective</h3>
        <p>
          The Kingdra Pokemon Teambuilder redesign was a rewarding experience,
          especially in overcoming the challenges of adapting a dense desktop UI
          for mobile without sacrificing core functionality. Key takeaways from
          the project include:
        </p>
        <br />
        <ul>
          <li>
            <strong>Design Flexibility:</strong> Working within the constraints of
            the
            <code>Flowbite</code> component library highlighted the importance of
            selecting adaptable tools for cross-platform applications, and the tradeoffs
            of relying on predefined component systems.
          </li>
          <li>
            <strong>Mobile-Centric UX:</strong> Reimagining navigation and interactions
            with mobile in mind underscored the significance of gesture-friendly
            elements, avoiding hover-based functionality, and minimizing scroll times.
          </li>
          <li>
            <strong>Iterative Testing:</strong> Consistently testing with mobile
            users was crucial in identifying and refining areas like responsiveness
            and interactive feedback, helping build a more cohesive experience.
          </li>
          <li>
            <strong>PWA Benefits:</strong> Transitioning to a PWA was transformative,
            enabling offline access, faster load times, and a more app-like experience.
            This added an entirely new layer of functionality for mobile users.
          </li>
        </ul>
        <br />
        <p>Future Considerations:</p>
        <ul>
          <li>
            Further enhancement of the UI with more custom components to improve
            flexibility.
          </li>
          <li>
            Experimenting with machine learning for smarter Pokemon
            recommendations tailored to user preferences and competitive trends.
          </li>
          <li>
            Adding more adaptive content and supporting features for additional
            game formats, expanding the application's scope.
          </li>
        </ul>
      </section>
    </div>
  </main>
  <Footer />

  <style>
    .mockup-container {
      position: relative;
      width: 100%;
      max-width: 400px;
      margin: 0 auto;
      aspect-ratio: 9/16;
    }

    .mockup-content {
      position: absolute;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
      width: 90%;
      height: auto; /* Changed from fixed height */
      aspect-ratio: 9/16; /* Added to maintain phone screen ratio */
      overflow-y: auto;
      z-index: 1;
      scrollbar-width: none; /* Firefox */
    }

    .mockup-content::-webkit-scrollbar {
      display: none; /* Chrome, Safari and Opera */
    }

    .mockup-phone {
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      object-fit: contain;
      z-index: 2;
      pointer-events: none;
      aspect-ratio: 9/16;
    }

    @media (max-width: 1024px) {
      .mockup-content {
        transform: translate(-155px, -50%);
      }
    }

    .text-link {
      color: var(--header-color);
      text-decoration: none;
      font-weight: 600;
      display: inline-block;
      position: relative;
    }
    .text-link:after {
      bottom: 0;
      content: "";
      height: 2px;
      left: 50%;
      position: absolute;
      background: var(--header-color);
      transition:
        width 0.2s ease 0s,
        left 0.2s ease 0s;
      width: 0;
    }
    .text-link:hover:after {
      width: 100%;
      left: 0;
    }

    h3,
    h4,
    h5,
    h6,
    p {
      margin: 0;
      text-align: left;
    }

    h3 {
      margin-bottom: 1rem;
    }

    li {
      color: #d0d0d0;
      list-style-type: disc;
      margin-left: 1.25rem;
      padding: 0.25rem;
    }

    iframe {
      width: 100%;
      height: 100%;
      border: none;
    }

    section {
      padding: 2rem;
      border-bottom: 1px solid #353535;
    }

    h2 {
      margin-bottom: 1rem;
    }

    p {
      line-height: 1.6;
    }

    @media (max-width: 1000px) {
      main {
        flex-direction: column;
        width: 100%;
      }

      .sidebar {
        display: none;
      }
    }

    .card-container {
      display: flex;
      flex-wrap: wrap;
      gap: 1rem;
      justify-content: space-between;
    }

    .card {
      background-color: var(--card-color);
      border: 1px solid #333;
      border-radius: 0.75rem;
      padding: 1rem;
      width: calc(33.33% - 0.67rem);
      margin-bottom: 1rem;
    }

    .card h4 {
      margin-bottom: 0.5rem;
    }

    @media (max-width: 768px) {
      .card {
        width: 100%;
      }
    }

    .row-card-container {
      display: flex;
      flex-direction: column;
      gap: 1rem;
    }

    .row-card {
      display: flex;
      flex-direction: column;
      gap: 0.5rem;
      background-color: var(--card-color);
      border: 1px solid #333;
      border-radius: 0.75rem;
      padding: 1rem;
      width: 100%;
      margin-bottom: 1rem;
    }

    code {
      background-color: #2d2d2d;
      color: #f8f8f2;
      padding: 0.2rem 0.4rem;
      border-radius: 4px;
      font-family: "Courier New", Courier, monospace;
    }

    pre {
      background-color: #1e1e1e;
      color: #d4d4d4;
      padding: 1rem;
      border-radius: 8px;
      overflow: auto;
      text-align: left;
      white-space: pre-wrap;
      word-break: break-word;
    }
  </style>
</Layout>
