---
import { changeLanguage } from "i18next";
import Layout from "../../layouts/Layout.astro";
import Background from "../Background.astro";
import Experience from "../Experience.astro";
import Photography from "../Photography.astro";
import Projects from "../Projects.astro";
import Blog from "../Blog.astro";
import Footer from "../../layouts/Footer.astro";
import LanguagePicker from "../../components/LanguagePicker.astro";
import SideBar from "../../components/SideBar.astro";
import { Trans } from "astro-i18next/components";

changeLanguage("de");

// Define the navigation items to pass as props
const sidebarItems = [
    { i18nKey: "background.header", href: "#background" },
    { i18nKey: "projects.header", href: "#projects" },
    { i18nKey: "experience.header", href: "#experience" },
    { i18nKey: "photography.header", href: "#photography" },
    { i18nKey: "blog.header", href: "#blog" },
];
---

<Layout title="Liam Sullivan">
  <main>
    <LanguagePicker />
    <SideBar
      headerI18nKey="misc.contents"
      navItems={sidebarItems}
      className="right-18 fixed top-[18rem] z-10"
    />
    <Trans i18nKey="header"
      ><h1 class="condensed">
        Hi! My name is <span class="text-gradient">Liam</span>
      </h1></Trans
    >
    <Trans i18nKey="subheader"
      ><h2 class="condensed">
        I want to make the web as <strong>fun</strong> as it is <strong
          >functional</strong
        >.
      </h2></Trans
    >
    <div class="section-divider">
      <div id="background" class="card">
        <Background />
      </div>
      <div id="projects" class="fade-in">
        <Projects />
      </div>
      <div id="experience" class="card">
        <Experience />
      </div>
      <div id="photography" class="card">
        <Photography />
      </div>
      <div id="blog" class="card">
        <Blog />
      </div>
    </div>
    <Footer iconColor="#e0e0e0" />
  </main>
</Layout>

<style>
  main {
    margin: auto;
    display: flex;
    flex-direction: column;
    align-items: center;
    width: 1150px;
    max-width: calc(100% - 2rem);
    color: white;
    font-size: 20px;
    line-height: 1.6;
  }

  .astro-a {
    position: absolute;
    top: -32px;
    left: 50%;
    transform: translatex(-50%);
    width: 220px;
    height: auto;
    z-index: -1;
  }
  .text-gradient {
    background-image: var(--accent-gradient);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-size: 400%;
    background-position: 0%;
  }
  .section-divider {
    width: 100%;
    display: flex;
    flex-direction: column;
    justify-content: center;
    padding: 1rem;
    gap: 3rem;
  }
  .horizontal-divider {
    display: flex;
    flex-direction: row;
    gap: 2rem;
  }
  .card {
    opacity: 0;
    background-color: var(--card-color);
    border-radius: 0.75rem;
    border-width: 1px;
    border-color: #333333;
    transition: opacity 0.5s ease-out;
    width: 100%;
    display: flex;
    flex-direction: row;
    flex-wrap: nowrap;
    justify-content: space-between;
    list-style: none;
    padding: 1rem;
  }
  .fade-in {
    opacity: 0;
    transition: opacity 0.5s ease-out;
  }

  .fade-in.visible,
  .card.visible {
    opacity: 1;
  }
  .horizontal-divider #skills {
    width: 25%;
    flex-direction: column;
    justify-content: start;
    gap: 0.5rem;
  }
  .horizontal-divider #projects {
    flex-direction: column;
  }
  .horizontal-divider #blog {
    flex-direction: column;
    width: 50%;
    justify-content: space-between;
  }
  .horizontal-divider #photography {
    flex-direction: column;
    align-items: center;
    justify-content: start;
  }
  .card.visible {
    opacity: 1;
  }
  @media (max-width: 1000px) {
    main {
      width: 100%;
    }
    .horizontal-divider #skills {
      width: 100%;
      gap: 0;
    }
    .horizontal-divider #blog {
      width: 100%;
    }
    .section-divider {
      flex-direction: column;
    }
    .horizontal-divider {
      flex-direction: column;
    }
    .card {
      flex-direction: column;
      align-items: center;
      gap: 0;
    }
  }
  @media (max-width: 768px) {
    .section-divider {
      padding: 0rem;
      gap: 2rem;
    }
  }
  @media screen and (max-width: 1400px) {
    .sidebar {
      display: none;
    }
  }
</style>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    const elements = document.querySelectorAll(".card, .fade-in");

    const observer = new IntersectionObserver((entries) => {
      entries.forEach((entry) => {
        if (entry.isIntersecting) {
          entry.target.classList.add("visible");
        }
      });
    });

    elements.forEach((element) => observer.observe(element));
  });

  function handleScroll() {
    const nav: HTMLElement | null = document.querySelector(".sidebar");
    if (!nav) return;

    const scrollPosition = window.scrollY;
    const windowHeight = window.innerHeight;
    const fadeInStart = windowHeight * 0.05;

    if (scrollPosition > fadeInStart) {
      nav.classList.add("visible");
      const translatePercentage = Math.min(
        ((scrollPosition - fadeInStart) / windowHeight) * 100,
        20
      );
      nav.style.transform = `translateY(-${translatePercentage}%)`;
    } else {
      nav.classList.remove("visible");
      nav.style.transform = "translateY(0)";
    }

    // ... rest of the existing handleScroll function ...
  }

  // ... rest of the existing script ...
</script>
