---
import { t } from "i18next";
interface ButtonProps {
	href: string;
	label: string;
}

const { href } = Astro.props;
---

<a href={`/${t("misc.lang")}`} class="button">
    <p>{t("misc.backBtn")}</p>
    <svg xmlns="http://www.w3.org/2000/svg" width="32px" height="32px" viewBox="0 0 24 24"><path fill="white" d="M11.8 13H15q.425 0 .713-.288T16 12t-.288-.712T15 11h-3.2l.9-.9q.275-.275.275-.7t-.275-.7t-.7-.275t-.7.275l-2.6 2.6q-.3.3-.3.7t.3.7l2.6 2.6q.275.275.7.275t.7-.275t.275-.7t-.275-.7zm.2 9q-2.075 0-3.9-.788t-3.175-2.137T2.788 15.9T2 12t.788-3.9t2.137-3.175T8.1 2.788T12 2t3.9.788t3.175 2.137T21.213 8.1T22 12t-.788 3.9t-2.137 3.175t-3.175 2.138T12 22"/></svg>
</a>
<style>
	:root {
		--button-color: #fff;
		--new-button-color: #282935;
		--fill: #fff;
	}

	.button {
		width: fit-content;
		display: flex;
		flex-direction: row;
		gap: 0.5rem;
		position: relative;
		padding: 0.75rem 2rem;
		background-color: var(--new-button-color);
		border-radius: 25px;
		transition: all 0.3s;
		box-shadow: 0px 4px 6px rgba(0, 0, 0, 0.25);
	}

	.button p {
		color: var(--fill);
		transition: all 0.3s;
	}

	.button svg,
	.button svg path {
		position: absolute;
		right: 10px;
		opacity: 0;
		fill: var(--fill);
		transition: all 0.3s;
	}

	.button:hover {
		border-color: var(--new-button-color);
	}
	
	.button:hover p {
		transform: translateX(-15px);
	}
	
	.button:hover svg,
	.button:hover svg path{
		opacity: 1;
	}

	.button:active {
		transform: scale(0.95);
	}
</style>

