---
// @ts-ignore
import { localizePath } from "astro-i18next";
import Layout from "../layouts/Layout.astro";
import Footer from "../layouts/Footer.astro";
import Button from "../components/Button.astro";
import SideBar from "../components/SideBar.astro";
import ProjectDescription from "../components/ProjectDescription.astro";
import Mockup from "../images/mockup.png";
import { Image } from "astro:assets";
import iPhone from "../images/blank-iphone-mockup.png";
import MobileView from "../images/kingdra-mobile-view.png";
import PhoneMockup from "../components/PhoneMockup.astro";

const sidebarItems = [
  { i18nKey: "caseStudy.overview", href: "#overview" },
  { i18nKey: "caseStudy.context", href: "#context" },
  { i18nKey: "caseStudy.roadblocks", href: "#roadblocks" },
  { i18nKey: "caseStudy.considerations", href: "#considerations" },
  { i18nKey: "caseStudy.proposals", href: "#proposals" },
  { i18nKey: "caseStudy.adaptations", href: "#adaptations" },
  { i18nKey: "caseStudy.flow", href: "#flow" },
  { i18nKey: "caseStudy.retrospective", href: "#retrospective" },
];
---

<Layout title="The Journey to Mobile - A Case Study">
  <div class="m-8">
    <Button label={"Back"} href={localizePath("/")} />
  </div>
  <main class="mx-auto flex w-[1150px] max-w-full flex-row">
    <SideBar
      navItems={sidebarItems}
      className="fixed right-12 top-56 w-[1350px]"
    />
    <div class="mb-20">
      <h1 class="mt-4 text-center text-5xl font-bold text-white">
        Kingdra Pokemon Teambuilder
      </h1>

      <h2 class="mb-8 text-center text-[1rem] text-[#d0d0d0] md:mb-0">
        The Journey to Mobile - October 2024
      </h2>

      <Image src={Mockup} alt="Kingdra Teambuilder" />

      <div class="flex justify-center">
        <!--
        <ProjectDescription
          projectRole={"["Software Engineering", "Product Design"]"}
          team={["Solo"]}
          tools={["Next.js", "TypeScript", "Tailwind", "Figma"]}
          timeline={["1 Month"]}
        />
         -->
      </div>

      <!-- Scaffolded Sections Start Here -->

      <section class="pb-10 pt-10 md:flex md:gap-20" id="overview">
        <h3 class="text-2xl font-semibold text-white">Overview</h3>
        <div>
          <p>
            Following the creation of my Pokemon Teambuilder in June, users
            testing the web app on their phone ran into a significantly higher
            rate of bugs and grievances compared to their peers on desktop
            platforms. Mobile was an afterthought during the initial development
            process.
          </p>
          <br />
          <p>
            I tasked myself with rebuilding the UI for mobile devices, reducing
            the cost of interaction and easing the cognitive load for users that
            want to use the application on the go.
          </p>
          <br />
          <p>
            These improvements reduced the overall scrolling time between UI
            elements and significantly reduced time to select Pokémon for a
            given team.
          </p>
        </div>
      </section>

      <section id="context" class="flex gap-8 max-lg:flex-col">
        <div class="lg:w-2/3">
          <h3 class="!mb-3 text-2xl font-semibold text-white">Context</h3>
          <p>
            In June of 2024, I started development for this Pokémon Teambuilder
            project as a way to learn <a
              class="text-link"
              href="https://nextjs.org/"
              target="_blank"
              rel="noreferrer">Next.js</a
            > and build my first real full-stack application. The project was a lot
            of trial and error, and I spent a ton of time linking up database schemas,
            calling APIs, and writing the core logic that allowed the Teambuilder
            to
            <a
              class="text-link"
              href="https://bulbapedia.bulbagarden.net/wiki/Stat#Determination_of_stats"
              target="_blank"
              rel="noreferrer">mimic the math</a
            > that the core Pokémon games use to calculate stats. After deploying
            the app, I enlisted the help of my Pokémon fan friends to test the app.
            One problem was clear immediately.
          </p>
          <br />

          <div
            class="mb-6 border-l-2 border-[#454545] bg-[var(--card-color)] !p-4"
          >
            <h2 class="!m-0 text-white">
              The mobile experience was absolutely horrendous.
            </h2>
          </div>

          <p>
            They initially tested the app on their phones, because why wouldn't
            they? Mobile users make up <a
              class="text-link"
              href="https://explodingtopics.com/blog/mobile-internet-traffic#mobile-internet-top-stats"
              target="_blank"
              rel="noreferrer">over 60% of global internet traffic</a
            >. Many of them were running errands when I posted the question in
            the Discord, and thought they could check it out really quick on
            their break. They were in for a rude awakening. The interface forced
            them to scroll for entire seconds to find the Pokémon they were
            looking to find, and the infinite scrolling feature significantly
            favored desktop users, who could leverage the width of the screen to
            quickly scan for the Pokémon they wanted.
          </p>
          <br />
          <p>
            The message was loud and clear. The UI needed to be rebuilt with
            portable devices in mind.
          </p>
        </div>
        <div class="lg:sticky lg:top-8 lg:w-1/3">
          <PhoneMockup contentImage={MobileView} phoneImage={iPhone} />
        </div>
      </section>

      <section id="roadblocks">
        <h3 class="!mb-2 text-2xl font-semibold text-white">Roadblocks</h3>
        <p class="pb-3">There were a few issues right out the gate...</p>
        <div class="card-container">
          <div class="card">
            <svg
              class="mx-auto my-4"
              xmlns="http://www.w3.org/2000/svg"
              width="7rem"
              height="7rem"
              viewBox="0 0 18 16"
              ><path
                fill="white"
                d="M3.5 2h-3c-.275 0-.5.225-.5.5v11c0 .275.225.5.5.5h3c.275 0 .5-.225.5-.5v-11c0-.275-.225-.5-.5-.5M3 5H1V4h2zm5.5-3h-3c-.275 0-.5.225-.5.5v11c0 .275.225.5.5.5h3c.275 0 .5-.225.5-.5v-11c0-.275-.225-.5-.5-.5M8 5H6V4h2z"
              ></path><path
                fill="white"
                d="m11.954 2.773l-2.679 1.35a.5.5 0 0 0-.222.671l4.5 8.93a.5.5 0 0 0 .671.222l2.679-1.35a.5.5 0 0 0 .222-.671l-4.5-8.93a.5.5 0 0 0-.671-.222"
              ></path><path
                fill="white"
                d="M14.5 13.5a.5.5 0 1 1-1 0a.5.5 0 0 1 1 0"></path></svg
            >
            <h4 class="text-xl font-medium text-white">Component Libraries</h4>
            <p>
              I used the <a
                class="text-link"
                href="https://flowbite.com/"
                target="_blank"
                rel="noreferrer">Flowbite</a
              > component library to build the UI. This saved me a lot of time initially,
              but locked me into an inflexible ecosystem that hindered my ability
              to design the page responsively. The opportunity cost of switching
              off this UI library was too high. I would need to work within their
              framework for my redesign.
            </p>
          </div>
          <div class="card">
            <svg
              class="mx-auto my-2"
              xmlns="http://www.w3.org/2000/svg"
              width="8rem"
              height="8rem"
              viewBox="0 0 20 20"
              ><path
                fill="white"
                d="M6.25 3.5a3.25 3.25 0 0 0 0 6.5h7.5a1.75 1.75 0 1 1 0 3.5H4.56l.22-.22a.75.75 0 1 0-1.06-1.06l-1.5 1.5a.75.75 0 0 0 0 1.06l1.5 1.5a.75.75 0 1 0 1.06-1.06l-.22-.22h9.19a3.25 3.25 0 0 0 0-6.5h-7.5a1.75 1.75 0 1 1 0-3.5h10a.75.75 0 0 0 0-1.5z"
              ></path></svg
            >
            <h4 class="text-xl font-medium text-white">The S-Curve Design</h4>

            <p>
              I initially designed the UI with an S-Curve design to make the
              elements easy to track for users on desktops. This was a
              miscalculation on my part, as it meant that the interface would be
              significantly hindered on screens without significant horizontal
              real-estate.
            </p>
          </div>
          <div class="card">
            <svg
              class="mx-auto my-2"
              xmlns="http://www.w3.org/2000/svg"
              width="7rem"
              height="8rem"
              viewBox="0 0 24 24"
              ><path
                fill="white"
                d="m12 2l4 4h-3v7.85l6.53 3.76L21 15.03l1.5 5.47l-5.5 1.46l1.53-2.61L12 15.58l-6.53 3.77L7 21.96L1.5 20.5L3 15.03l1.47 2.58L11 13.85V6H8z"
              ></path></svg
            >
            <h4 class="text-xl font-medium text-white">
              Lack of Dimensionality
            </h4>
            <p>
              Mobile apps work best when using stacked UI elements and gestures
              for navigation. Unfortunately, web apps lack native gesture
              support without heavy use of JavaScript. I had to design around
              these limitations while still aiming for a responsive experience.
            </p>
          </div>
          <!--
          <div class="card">
            <h4 class="text-xl font-medium text-white">
              Interactivity on Hover
            </h4>
            <p>
              Since this application was initially designed with desktop users
              in mind, it includes a lot of buttons that were only accessible
              to users with working mice.
            </p>
          </div>
          -->
        </div>
        <div class="relative mt-4 py-8 text-center">
          <div class="mx-auto mb-6 h-[1px] w-1/3 bg-[#333]"></div>
          <p class="!text-center">THE GOAL?</p>
          <h2 class="my-0 font-medium text-white">
            Take a dense UI, even by desktop standards, and make it feel at home
            on smaller devices.
          </h2>
          <div class="mx-auto mt-6 h-[1px] w-1/3 bg-[#333]"></div>
        </div>
      </section>

      <section id="considerations">
        <h3 class="!mb-1 text-2xl font-semibold text-white">Considerations</h3>
        <p class="!mb-4">
          Interacting with the web is radically different on mobile devices.
        </p>
        <div class="row-card-container">
          <div class="row-card">
            <div class="flex gap-6 max-md:flex-col">
              <div class="flex flex-shrink-0 items-center justify-center p-6">
                <svg
                  xmlns="http://www.w3.org/2000/svg"
                  width="8rem"
                  height="8rem"
                  viewBox="0 0 16 16"
                  ><path
                    fill="white"
                    d="M1 5a2 2 0 0 1 2-2h10a2 2 0 0 1 2 2v5a2 2 0 0 1-1.164 1.818a1.5 1.5 0 0 0-.275-.379l-.446-.446A1 1 0 0 0 14 10V5a1 1 0 0 0-1-1H3a1 1 0 0 0-1 1v5a1 1 0 0 0 1 1h4v1H3a2 2 0 0 1-2-2zm7.854 3.146A.5.5 0 0 0 8 8.5v6a.5.5 0 0 0 .9.3l1.35-1.8h2.25a.5.5 0 0 0 .354-.854zM9 13V9.707L11.293 12H10a.5.5 0 0 0-.4.2z"
                  ></path></svg
                >
              </div>
              <div>
                <h4 class="text-xl font-medium text-white">
                  Hover State Alternatives
                </h4>
                <p>
                  While hover states work well for desktop interfaces, they
                  present an interesting challenge on touch devices. Since
                  mobile users can't easily preview interactive elements through
                  hover, I had to consider alternative ways to communicate
                  interactivity. This led me to explore more explicit visual
                  indicators and touch-friendly patterns that could work
                  alongside existing hover states, rather than replacing them
                  entirely. The goal was to enhance the mobile experience while
                  maintaining the sophisticated interactions that desktop users
                  enjoy.
                </p>
              </div>
            </div>
          </div>
          <div class="row-card">
            <div class="flex gap-6 max-md:flex-col">
              <div class="flex flex-shrink-0 items-center justify-center p-6">
                <svg
                  xmlns="http://www.w3.org/2000/svg"
                  width="8rem"
                  height="8rem"
                  viewBox="0 0 24 24"
                  ><path
                    fill="white"
                    d="M12 15q.425 0 .713-.288T13 14t-.288-.712T12 13t-.712.288T11 14t.288.713T12 15m-1-4h2V5h-2zM2 22V4q0-.825.588-1.412T4 2h16q.825 0 1.413.588T22 4v12q0 .825-.587 1.413T20 18H6zm3.15-6H20V4H4v13.125zM4 16V4z"
                  ></path></svg
                >
              </div>
              <div>
                <h4 class="text-xl font-medium text-white">
                  Interactive Feedback
                </h4>
                <p>
                  The transition from mouse-based to touch interactions opened
                  up interesting possibilities for user feedback. While desktop
                  users benefit from cursor changes and hover states, touch
                  interfaces allow for more direct, physical interactions. I
                  explored ways to complement these interactions with subtle
                  animations and visual changes that could enhance the user's
                  confidence without overwhelming the interface. This balance
                  between feedback and simplicity became a key consideration in
                  my mobile adaptation.
                </p>
              </div>
            </div>
          </div>
          <div class="row-card">
            <div class="flex gap-6 max-md:flex-col">
              <div class="flex flex-shrink-0 items-center justify-center p-6">
                <svg
                  xmlns="http://www.w3.org/2000/svg"
                  width="8rem"
                  height="8rem"
                  viewBox="0 0 24 24"
                  ><path
                    fill="white"
                    d="M3 17v2h6v-2H3M3 5v2h10V5H3m10 16v-2h8v-2h-8v-2h-2v6h2M7 9v2H3v2h4v2h2V9H7m14 4v-2H11v2h10m-6-4h2V7h4V5h-4V3h-2v6Z"
                  ></path></svg
                >
              </div>
              <div>
                <h4 class="text-xl font-medium text-white">
                  Information Hierarchy
                </h4>
                <p>
                  The desktop version's expansive layout allowed for
                  simultaneous display of multiple features and data points. On
                  mobile, this approach would overwhelm users and create
                  cognitive overload. I needed to carefully prioritize
                  information, creating a clear hierarchy that presents the most
                  important data first while making secondary information easily
                  accessible through progressive disclosure. This was
                  particularly important for the Pokemon selection interface,
                  where users needed to be able to quickly filter down to what
                  they want through competitive tier and/or generation.
                </p>
              </div>
            </div>
          </div>
        </div>
      </section>

      <section id="proposals">
        <h3 class="!mb-2 text-2xl font-semibold text-white">Proposals</h3>
        <p class="pb-4">
          There were a couple ways to do this, each with their own set of
          problems.
        </p>
        <div class="flex flex-wrap justify-between gap-8 max-lg:flex-col">
          <div
            class="mb-8 w-[calc(50%-1rem)] rounded-xl border border-[#333] bg-[var(--card-color)] p-6 max-lg:w-full"
          >
            <div
              class="mb-6 h-[450px] w-full rounded-xl border border-[#333] bg-[var(--card-color)] p-4"
            >
              <h2 class="items-center text-[#666]">Image</h2>
            </div>
            <h4 class="!mb-2 text-xl font-medium text-white">Bottom Tab Bar</h4>
            <div class="space-y-3">
              <div class="flex items-start gap-4 rounded-lg bg-[#1a1a1a] p-4">
                <svg
                  xmlns="http://www.w3.org/2000/svg"
                  width="22"
                  height="22"
                  viewBox="0 0 24 24"
                  class="flex-shrink-0"
                >
                  <path
                    fill="#0E9F6E"
                    d="M23 10a2 2 0 0 0-2-2h-6.32l.96-4.57c.02-.1.03-.21.03-.32c0-.41-.17-.79-.44-1.06L14.17 1L7.59 7.58C7.22 7.95 7 8.45 7 9v10a2 2 0 0 0 2 2h9c.83 0 1.54-.5 1.84-1.22l3.02-7.05c.09-.23.14-.47.14-.73zM1 21h4V9H1z"
                  ></path>
                </svg>
                <p class="text-[#d0d0d0]">
                  Easily accessible for one-handed use, familiar to iOS users,
                  clean and minimalist interface
                </p>
              </div>
              <div class="flex items-start gap-4 rounded-lg bg-[#1a1a1a] p-4">
                <svg
                  xmlns="http://www.w3.org/2000/svg"
                  width="22"
                  height="22"
                  viewBox="0 0 24 24"
                  class="flex-shrink-0"
                >
                  <path
                    fill="#F05252"
                    d="M19 15h4V3h-4m-4 0H6c-.83 0-1.54.5-1.84 1.22l-3.02 7.05c-.09.23-.14.47-.14.73v2a2 2 0 0 0 2 2h6.31l-.95 4.57c-.02.1-.03.2-.03.31c0 .42.17.79.44 1.06L9.83 23l6.58-6.59c.37-.36.59-.86.59-1.41V5a2 2 0 0 0-2-2"
                  ></path>
                </svg>
                <p class="text-[#d0d0d0]">
                  Limited screen real estate for content, can't see added
                  Pokémon without switching tabs, not enough features to justify
                  multiple tabs
                </p>
              </div>
            </div>
          </div>
          <div
            class="mb-8 w-[calc(50%-1rem)] rounded-xl border border-[#333] bg-[var(--card-color)] p-6 max-lg:w-full"
          >
            <div
              class="mb-6 h-[450px] w-full rounded-xl border border-[#333] bg-[var(--card-color)] p-4"
            >
              <h2 class="items-center text-[#666]">Image</h2>
            </div>
            <h4 class="!mb-2 text-xl font-medium text-white">
              Material Design
            </h4>
            <div class="space-y-3">
              <div class="flex items-start gap-4 rounded-lg bg-[#1a1a1a] p-4">
                <svg
                  xmlns="http://www.w3.org/2000/svg"
                  width="22"
                  height="22"
                  viewBox="0 0 24 24"
                  class="flex-shrink-0"
                >
                  <path
                    fill="#0E9F6E"
                    d="M23 10a2 2 0 0 0-2-2h-6.32l.96-4.57c.02-.1.03-.21.03-.32c0-.41-.17-.79-.44-1.06L14.17 1L7.59 7.58C7.22 7.95 7 8.45 7 9v10a2 2 0 0 0 2 2h9c.83 0 1.54-.5 1.84-1.22l3.02-7.05c.09-.23.14-.47.14-.73zM1 21h4V9H1z"
                  ></path>
                </svg>
                <p class="text-[#d0d0d0]">
                  Familiar to Android users, excellent support for modals and
                  floating action buttons, clear visual hierarchy
                </p>
              </div>
              <div class="flex items-start gap-4 rounded-lg bg-[#1a1a1a] p-4">
                <svg
                  xmlns="http://www.w3.org/2000/svg"
                  width="22"
                  height="22"
                  viewBox="0 0 24 24"
                  class="flex-shrink-0"
                >
                  <path
                    fill="#F05252"
                    d="M19 15h4V3h-4m-4 0H6c-.83 0-1.54.5-1.84 1.22l-3.02 7.05c-.09.23-.14.47-.14.73v2a2 2 0 0 0 2 2h6.31l-.95 4.57c-.02.1-.03.2-.03.31c0 .42.17.79.44 1.06L9.83 23l6.58-6.59c.37-.36.59-.86.59-1.41V5a2 2 0 0 0-2-2"
                  ></path>
                </svg>
                <p class="text-[#d0d0d0]">
                  May feel out of place on iOS devices, animations can be
                  resource-intensive, requires significant rework of existing
                  Flowbite components
                </p>
              </div>
            </div>
          </div>
        </div>
      </section>

      <section id="adaptations">
        <h3 class="text-2xl font-semibold text-white">Adaptations</h3>
        <div class="card-container">
          <div class="card">
            <div class="mb-4 flex gap-4">
              <div class="relative w-full">
                <div
                  class="flex aspect-video w-full items-center justify-center rounded-lg bg-[#1a1a1a] text-[#666]"
                >
                  Before Image
                </div>
                <div
                  class="absolute right-2 top-2 flex items-center justify-center rounded-full bg-red-500/20 p-1 text-red-500"
                >
                  <svg
                    xmlns="http://www.w3.org/2000/svg"
                    width="24"
                    height="24"
                    viewBox="0 0 24 24"
                  >
                    <path
                      fill="currentColor"
                      d="M19 6.41L17.59 5L12 10.59L6.41 5L5 6.41L10.59 12L5 17.59L6.41 19L12 13.41L17.59 19L19 17.59L13.41 12z"
                    ></path>
                  </svg>
                </div>
              </div>
              <div class="relative w-full">
                <div
                  class="flex aspect-video w-full items-center justify-center rounded-lg bg-[#1a1a1a] text-[#666]"
                >
                  After Image
                </div>
                <div
                  class="absolute right-2 top-2 flex items-center justify-center rounded-full bg-green-500/20 p-1 text-green-500"
                >
                  <svg
                    xmlns="http://www.w3.org/2000/svg"
                    width="24"
                    height="24"
                    viewBox="0 0 24 24"
                  >
                    <path
                      fill="currentColor"
                      d="M9 16.17L4.83 12l-1.42 1.41L9 19L21 7l-1.41-1.41z"
                    ></path>
                  </svg>
                </div>
              </div>
            </div>
            <h4 class="text-xl font-medium text-white">Hamburger Menu</h4>
            <p>
              The original desktop navigation relied heavily on a fixed sidebar,
              which consumed too much valuable screen space on mobile devices.
              Implementing a hamburger menu allowed us to tuck away navigation
              items when not in use, while still maintaining quick access to all
              sections of the application. This pattern is particularly familiar
              to mobile users and helped reduce cognitive load while preserving
              the full functionality of the navigation system.
            </p>
          </div>
          <div class="card">
            <div class="mb-4 flex gap-4">
              <div class="relative w-full">
                <div
                  class="flex aspect-video w-full items-center justify-center rounded-lg bg-[#1a1a1a] text-[#666]"
                >
                  Before Image
                </div>
                <div
                  class="absolute right-2 top-2 flex items-center justify-center rounded-full bg-red-500/20 p-1 text-red-500"
                >
                  <svg
                    xmlns="http://www.w3.org/2000/svg"
                    width="24"
                    height="24"
                    viewBox="0 0 24 24"
                  >
                    <path
                      fill="currentColor"
                      d="M19 6.41L17.59 5L12 10.59L6.41 5L5 6.41L10.59 12L5 17.59L6.41 19L12 13.41L17.59 19L19 17.59L13.41 12z"
                    ></path>
                  </svg>
                </div>
              </div>
              <div class="relative w-full">
                <div
                  class="flex aspect-video w-full items-center justify-center rounded-lg bg-[#1a1a1a] text-[#666]"
                >
                  After Image
                </div>
                <div
                  class="absolute right-2 top-2 flex items-center justify-center rounded-full bg-green-500/20 p-1 text-green-500"
                >
                  <svg
                    xmlns="http://www.w3.org/2000/svg"
                    width="24"
                    height="24"
                    viewBox="0 0 24 24"
                  >
                    <path
                      fill="currentColor"
                      d="M9 16.17L4.83 12l-1.42 1.41L9 19L21 7l-1.41-1.41z"
                    ></path>
                  </svg>
                </div>
              </div>
            </div>
            <h4 class="text-xl font-medium text-white">Margins</h4>
            <p>
              The original desktop layout used generous margins to create visual
              breathing room, but this wasn't feasible on mobile screens. I
              significantly reduced margins while maintaining just enough
              spacing to preserve touch target sizes and readability. This
              allowed me to maximize the limited screen real estate and fit more
              functional elements into view, particularly within modal
              interfaces where space was at a premium.
            </p>
          </div>

          <div class="card">
            <div class="mb-6 flex gap-4">
              <div class="relative w-full">
                <div
                  class="flex aspect-video w-full items-center justify-center rounded-lg bg-[#1a1a1a] text-[#666]"
                >
                  Before Image
                </div>
                <div
                  class="absolute right-2 top-2 flex items-center justify-center rounded-full bg-red-500/20 p-1 text-red-500"
                >
                  <svg
                    xmlns="http://www.w3.org/2000/svg"
                    width="24"
                    height="24"
                    viewBox="0 0 24 24"
                  >
                    <path
                      fill="currentColor"
                      d="M19 6.41L17.59 5L12 10.59L6.41 5L5 6.41L10.59 12L5 17.59L6.41 19L12 13.41L17.59 19L19 17.59L13.41 12z"
                    ></path>
                  </svg>
                </div>
              </div>
              <div class="relative w-full">
                <div
                  class="flex aspect-video w-full items-center justify-center rounded-lg bg-[#1a1a1a] text-[#666]"
                >
                  After Image
                </div>
                <div
                  class="absolute right-2 top-2 flex items-center justify-center rounded-full bg-green-500/20 p-1 text-green-500"
                >
                  <svg
                    xmlns="http://www.w3.org/2000/svg"
                    width="24"
                    height="24"
                    viewBox="0 0 24 24"
                  >
                    <path
                      fill="currentColor"
                      d="M9 16.17L4.83 12l-1.42 1.41L9 19L21 7l-1.41-1.41z"
                    ></path>
                  </svg>
                </div>
              </div>
            </div>
            <h4 class="text-xl font-medium text-white">
              Convert Tabs to Dropdowns
            </h4>
            <p>
              The horizontal tab system that worked well on desktop became
              unwieldy on mobile devices, often requiring horizontal scrolling
              or breaking across multiple lines. By converting these tabs into
              dropdown menus, I maintained all filtering and categorization
              options while creating a more compact, mobile-friendly interface.
              This change was particularly important for the Pokemon selection
              interface, where users needed quick access to different categories
              and filtering options.
            </p>
          </div>

          <div class="card">
            <div class="mb-4 flex gap-4">
              <div class="relative w-full">
                <div
                  class="flex aspect-video w-full items-center justify-center rounded-lg bg-[#1a1a1a] text-[#666]"
                >
                  Before Image
                </div>
                <div
                  class="absolute right-2 top-2 flex items-center justify-center rounded-full bg-red-500/20 p-1 text-red-500"
                >
                  <svg
                    xmlns="http://www.w3.org/2000/svg"
                    width="24"
                    height="24"
                    viewBox="0 0 24 24"
                  >
                    <path
                      fill="currentColor"
                      d="M19 6.41L17.59 5L12 10.59L6.41 5L5 6.41L10.59 12L5 17.59L6.41 19L12 13.41L17.59 19L19 17.59L13.41 12z"
                    ></path>
                  </svg>
                </div>
              </div>
              <div class="relative w-full">
                <div
                  class="flex aspect-video w-full items-center justify-center rounded-lg bg-[#1a1a1a] text-[#666]"
                >
                  After Image
                </div>
                <div
                  class="absolute right-2 top-2 flex items-center justify-center rounded-full bg-green-500/20 p-1 text-green-500"
                >
                  <svg
                    xmlns="http://www.w3.org/2000/svg"
                    width="24"
                    height="24"
                    viewBox="0 0 24 24"
                  >
                    <path
                      fill="currentColor"
                      d="M9 16.17L4.83 12l-1.42 1.41L9 19L21 7l-1.41-1.41z"
                    ></path>
                  </svg>
                </div>
              </div>
            </div>
            <h4 class="text-xl font-medium text-white">PWA Migration</h4>
            <p>
              The Kingdra Teambuilder's transition to a Progressive Web App
              (PWA) significantly enhanced the mobile user experience. This
              upgrade provided faster loading times through caching, and allowed
              users to install the app directly to their home screen. The PWA
              implementation also improved performance by reducing server
              requests, making the mobile experience feel more native and
              responsive.
            </p>
          </div>

          <div class="card">
            <div class="mb-6 flex gap-4">
              <div class="relative w-full">
                <div
                  class="flex aspect-video w-full items-center justify-center rounded-lg bg-[#1a1a1a] text-[#666]"
                >
                  Before Image
                </div>
                <div
                  class="absolute right-2 top-2 flex items-center justify-center rounded-full bg-red-500/20 p-1 text-red-500"
                >
                  <svg
                    xmlns="http://www.w3.org/2000/svg"
                    width="24"
                    height="24"
                    viewBox="0 0 24 24"
                  >
                    <path
                      fill="currentColor"
                      d="M19 6.41L17.59 5L12 10.59L6.41 5L5 6.41L10.59 12L5 17.59L6.41 19L12 13.41L17.59 19L19 17.59L13.41 12z"
                    ></path>
                  </svg>
                </div>
              </div>
              <div class="relative w-full">
                <div
                  class="flex aspect-video w-full items-center justify-center rounded-lg bg-[#1a1a1a] text-[#666]"
                >
                  After Image
                </div>
                <div
                  class="absolute right-2 top-2 flex items-center justify-center rounded-full bg-green-500/20 p-1 text-green-500"
                >
                  <svg
                    xmlns="http://www.w3.org/2000/svg"
                    width="24"
                    height="24"
                    viewBox="0 0 24 24"
                  >
                    <path
                      fill="currentColor"
                      d="M9 16.17L4.83 12l-1.42 1.41L9 19L21 7l-1.41-1.41z"
                    ></path>
                  </svg>
                </div>
              </div>
            </div>
            <h4 class="text-xl font-medium text-white">
              "Add Pokemon" Button + Modal
            </h4>
            <p>
              The desktop version's Pokemon selection interface was spread
              across the page and relied heavily on width. I scrapped keeping
              selections on the same page, instead implementing a button that
              opens a full-screen modal. This creates a clear hierarchy, reduces
              cognitive load, and makes adding Pokemon accessible from anywhere.
              The modal provides a focused selection experience with
              touch-optimized filtering and search controls.
            </p>
          </div>
          <div class="card">
            <div class="mb-6 flex gap-4">
              <div class="relative w-full">
                <div
                  class="flex aspect-video w-full items-center justify-center rounded-lg bg-[#1a1a1a] text-[#666]"
                >
                  Before Image
                </div>
                <div
                  class="absolute right-2 top-2 flex items-center justify-center rounded-full bg-red-500/20 p-1 text-red-500"
                >
                  <svg
                    xmlns="http://www.w3.org/2000/svg"
                    width="24"
                    height="24"
                    viewBox="0 0 24 24"
                  >
                    <path
                      fill="currentColor"
                      d="M19 6.41L17.59 5L12 10.59L6.41 5L5 6.41L10.59 12L5 17.59L6.41 19L12 13.41L17.59 19L19 17.59L13.41 12z"
                    ></path>
                  </svg>
                </div>
              </div>
              <div class="relative w-full">
                <div
                  class="flex aspect-video w-full items-center justify-center rounded-lg bg-[#1a1a1a] text-[#666]"
                >
                  After Image
                </div>
                <div
                  class="absolute right-2 top-2 flex items-center justify-center rounded-full bg-green-500/20 p-1 text-green-500"
                >
                  <svg
                    xmlns="http://www.w3.org/2000/svg"
                    width="24"
                    height="24"
                    viewBox="0 0 24 24"
                  >
                    <path
                      fill="currentColor"
                      d="M9 16.17L4.83 12l-1.42 1.41L9 19L21 7l-1.41-1.41z"
                    ></path>
                  </svg>
                </div>
              </div>
            </div>
            <h4 class="text-xl font-medium text-white">
              Horizontal Pokemon Slots
            </h4>
            <p>
              The original grid layout was replaced with a horizontal list of
              Pokemon slots. This change maintains visibility of the entire team
              while conserving horizontal space, allowing users to easily scan
              through their team members. The horizontal layout also provides a
              natural touch interaction pattern that's familiar to mobile users,
              making team management more intuitive on smaller screens.
            </p>
          </div>
        </div>
      </section>

      <section id="flow">
        <h3 class="!mb-2 text-2xl font-semibold text-white">Flow</h3>
        <p>So how does this all come together?</p>
        <br />
        <div class="grid grid-cols-1 gap-6 md:grid-cols-2">
          <div
            class="flex h-[600px] w-full flex-col gap-2 rounded-xl border border-[#333] bg-[var(--card-color)] p-4"
          >
            <h2 class="text-[#666]">Image</h2>
          </div>
          <div
            class="flex h-[600px] w-full flex-col gap-2 rounded-xl border border-[#333] bg-[var(--card-color)] p-4"
          >
            <h2 class="text-[#666]">Image</h2>
          </div>
          <div
            class="flex h-[600px] w-full flex-col gap-2 rounded-xl border border-[#333] bg-[var(--card-color)] p-4"
          >
            <h2 class="text-[#666]">Image</h2>
          </div>
          <div
            class="flex h-[600px] w-full flex-col gap-2 rounded-xl border border-[#333] bg-[var(--card-color)] p-4"
          >
            <h2 class="text-[#666]">Image</h2>
          </div>
        </div>
      </section>

      <section id="retrospective">
        <h3 class="text-2xl font-semibold text-white">Retrospective</h3>
        <p>
          Taking the Kingdra Teambuilder from desktop to mobile taught me a lot
          about the nuances of responsive design. What started as a simple
          adaptation turned into a deep dive into mobile UX patterns and the
          challenges of preserving complex functionality on smaller screens.
        </p>
        <br />
        <ul>
          <li>
            <strong>The Component Library Dilemma:</strong> One of the biggest early
            hurdles was working within Flowbite's constraints. While it had served
            me well for desktop, its rigid desktop-first approach meant I had to
            get creative with mobile features. In hindsight, this reinforced how
            crucial it is to evaluate libraries through a mobile lens from the start.
          </li>
          <li>
            <strong>Rethinking Touch Navigation:</strong> The S-curve layout that
            worked so smoothly on desktop became a major pain point. Converting hover
            states and complex layouts into a touch-friendly interface meant going
            back to basics. The switch to modals and dropdowns wasn't just a compromise
            - it ended up creating a more focused, intuitive experience for mobile
            users.
          </li>
          <li>
            <strong>The PWA Game-Changer:</strong> Making the jump to a Progressive
            Web App had a bigger impact than expected. Load times dropped by over
            60%, and while offline functionality was limited due to MongoDB, the
            improved caching and performance made a huge difference. This was especially
            noticeable for players accessing the app in areas with slower connections.
          </li>
          <li>
            <strong>Learning from Users:</strong> The Pokemon community's feedback
            was eye-opening. While desktop users dove deep into stats and analysis,
            mobile users just wanted to build teams quickly. This insight led us
            to streamline the mobile interface around rapid team composition, keeping
            the detailed number-crunching a tap away when needed.
          </li>
        </ul>
        <br />
        <p><strong>Going Forward?</strong></p>
        <ul>
          <li>
            First up is adding gesture controls - imagine being able to swipe
            between moves or drag to reorder team members. Small touches like
            these could make the mobile experience feel much more natural. I'm
            looking at potentially diving into React Native in the not so
            distant future.
          </li>
          <li>
            I'm also planning to gradually break free from Flowbite by building
            custom components that work seamlessly across all devices. It's a
            big undertaking, but worth it for the flexibility I'll gain.
          </li>
          <li>
            Performance optimization is next on the roadmap. While the PWA
            helped tremendously, there's still room to improve load times and
            reduce data usage. I'm looking into refactoring some of my reactive
            state, as I have a lot of unnecessary re-renders.
          </li>
        </ul>
      </section>
    </div>
  </main>
  <Footer />

  <style>
    /* Broken on Safari... disable for now */
    @supports (hanging-punctuation: first) and (font: -apple-system-body) and
      (-webkit-appearance: none) {
      .mockup-container,
      .mockup-content,
      .mockup-phone {
        display: none;
      }
    }

    .mockup-container {
      position: relative;
      width: 100%;
      max-width: 400px;
      margin: 0 auto;
      aspect-ratio: 9/16;
    }

    .mockup-content {
      position: absolute;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
      width: 90%;
      height: auto; /* Changed from fixed height */
      aspect-ratio: 9/16; /* Added to maintain phone screen ratio */
      overflow-y: auto;
      z-index: 1;
      scrollbar-width: none; /* Firefox */
    }

    .mockup-content::-webkit-scrollbar {
      display: none; /* Chrome, Safari and Opera */
    }

    .mockup-phone {
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      object-fit: contain;
      z-index: 2;
      pointer-events: none;
      aspect-ratio: 9/16;
    }

    @media (max-width: 1024px) {
      .mockup-content {
        transform: translate(-155px, -50%);
      }
    }

    .text-link {
      color: var(--header-color);
      text-decoration: none;
      font-weight: 600;
      display: inline-block;
      position: relative;
    }
    .text-link:after {
      bottom: 0;
      content: "";
      height: 2px;
      left: 50%;
      position: absolute;
      background: var(--header-color);
      transition:
        width 0.2s ease 0s,
        left 0.2s ease 0s;
      width: 0;
    }
    .text-link:hover:after {
      width: 100%;
      left: 0;
    }

    h3,
    h4,
    h5,
    h6,
    p {
      margin: 0;
      text-align: left;
    }

    h3 {
      margin-bottom: 1rem;
    }

    li {
      color: #d0d0d0;
      list-style-type: disc;
      margin-left: 1.25rem;
      padding: 0.25rem;
    }

    iframe {
      width: 100%;
      height: 100%;
      border: none;
    }

    section {
      padding: 2rem;
      /* border-bottom: 1px solid #353535; */
    }

    h2 {
      margin-bottom: 1rem;
    }

    p {
      line-height: 1.6;
    }

    @media (max-width: 1000px) {
      main {
        flex-direction: column;
        width: 100%;
      }

      .sidebar {
        display: none;
      }
    }

    .card-container {
      display: flex;
      flex-wrap: wrap;
      gap: 1rem;
      justify-content: space-between;
    }

    .card {
      background-color: var(--card-color);
      border: 1px solid #333;
      border-radius: 0.75rem;
      padding: 1rem;
      width: calc(33.33% - 0.67rem);
      margin-bottom: 1rem;
    }

    .card h4 {
      margin-bottom: 0.5rem;
    }

    @media (max-width: 768px) {
      .card {
        width: 100%;
      }
    }

    .row-card-container {
      display: flex;
      flex-direction: column;
      gap: 1rem;
    }

    .row-card {
      display: flex;
      flex-direction: column;
      gap: 0.5rem;
      background-color: var(--card-color);
      border: 1px solid #333;
      border-radius: 0.75rem;
      padding: 1rem;
      width: 100%;
      margin-bottom: 1rem;
    }

    code {
      background-color: #2d2d2d;
      color: #f8f8f2;
      padding: 0.2rem 0.4rem;
      border-radius: 4px;
      font-family: "Courier New", Courier, monospace;
    }

    pre {
      background-color: #1e1e1e;
      color: #d4d4d4;
      padding: 1rem;
      border-radius: 8px;
      overflow: auto;
      text-align: left;
      white-space: pre-wrap;
      word-break: break-word;
    }
  </style>
</Layout>
